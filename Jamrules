#OPTIM = -O2 ;

if $(OS) = OPENBSD {
	C++ = eg++ ;
	SHLIB_SUF = so.0.0 ;

	C++FLAGS = -DLLVM_VER=34 ;

	PKG_CONFIG_LIBS = gl glew freetype2 ;
	# Link directly against libestdc++ from ports
	LINKLIBS on citrun_gl = -lestdc++ -lm -lglut ;

	LINKLIBS on citrun_instrument =
		-lestdc++
		-Wl,--start-group
		-lclangAST
		-lclangAnalysis
		-lclangBasic
		-lclangDriver
		-lclangEdit
		-lclangFrontend
		-lclangFrontendTool
		-lclangLex -lclangParse
		-lclangRewriteCore
		-lclangRewriteFrontend
		-lclangSema
		-lclangSerialization
		-lclangTooling
		-Wl,--end-group ;
}

if $(OS) = MACOSX {
	SHLIB_SUF = dylib ;

	C++FLAGS = -Wno-deprecated -DLLVM_VER=37 ;

	PKG_CONFIG_LIBS = glew freetype2 ;
	LINKLIBS on citrun_gl = -framework OpenGL -framework GLUT ;
	LINKLIBS on citrun_gl += -lc++ -lm ;

	# We must specify that _scv_node0 will be available at runtime
	LINKFLAGS on libscv.$(SHLIB_SUF) = -Wl,-U,__scv_node0 ;

	LINKLIBS on citrun_instrument =
		-lc++
		-lclangAST
		-lclangAnalysis
		-lclangBasic
		-lclangDriver
		-lclangEdit
		-lclangFrontend
		-lclangFrontendTool
		-lclangLex -lclangParse
		-lclangRewrite
		-lclangRewriteFrontend
		-lclangSema
		-lclangSerialization
		-lclangTooling ;
}

if $(OS) = LINUX {
	SHLIB_SUF = so ;

	C++FLAGS = -DLLVM_VER=35 ;

	PKG_CONFIG_LIBS = gl glew freetype2 ;
	# Link directly against libestdc++ from ports
	LINKLIBS on citrun_gl = -lstdc++ -lm -lglut ;

	LINKLIBS on citrun_instrument =
		-Wl,--start-group
		-lclangAST
		-lclangAnalysis
		-lclangBasic
		-lclangDriver
		-lclangEdit
		-lclangFrontend
		-lclangFrontendTool
		-lclangLex -lclangParse
		-lclangRewrite
		-lclangRewriteFrontend
		-lclangSema
		-lclangSerialization
		-lclangTooling
		-Wl,--end-group
		-lstdc++
		-lbsd ;
}

if $(PREFIX) {
	# PREFIX was set, use absolute install paths.
	CITRUN_LIB =  $(PREFIX)/lib/libcitrun.a ;
	CITRUN_PATH = $(PREFIX)/share/citrun ;
}
else {
	# No PREFIX means an in tree build. Use absolute paths to local copies.
	ROOT = "`readlink -f $(TOP)`" ;
	CITRUN_LIB =  $(ROOT)/lib/libcitrun.a ;
	CITRUN_PATH = $(ROOT)/src ;
}

# Try and respect this, {pkg,llvm}-config gives -O? too unfortunately
OPTIM = $(CFLAGS) ;

C++FLAGS += -std=c++11 ;

_CLANG_LIBS =
	-lclangAST
	-lclangAnalysis
	-lclangBasic
	-lclangDriver
	-lclangEdit
	-lclangFrontend
	-lclangFrontendTool
	-lclangLex
	-lclangParse
	-lclangRewrite
	-lclangRewriteFrontend
	-lclangSema
	-lclangSerialization
	-lclangTooling ;

if $(OS) = OPENBSD {
	C++ = eg++ ;

	CLANG_LIBS = -Wl,--start-group $(_CLANG_LIBS) -Wl,--end-group ;
	PKG_CONFIG_LIBS = gl glew freetype2 ;
	LINKLIBS on citrun-gl = -lestdc++ -lm -lglut ;
	LINKLIBS on citrun-inst = -lestdc++ ;
	LINKLIBS on citrun-term = -lestdc++ ;
}

if $(OS) = MACOSX {
	PKG_CONFIG_LIBS = glew freetype2 ;
	CLANG_LIBS = $(_CLANG_LIBS) ;
	LINKLIBS on citrun-gl = -framework OpenGL -framework GLUT -lc++ -lm ;
	LINKLIBS on citrun-inst = -lc++ ;
	LINKLIBS on citrun-term = -lc++ ;
}

if $(OS) = LINUX {
	# llvm version is 3.5 on Debian, which is too old.
	CLANG_LIBS = -Wl,--start-group $(_CLANG_LIBS) -Wl,--end-group ;
	PKG_CONFIG_LIBS = gl glew freetype2 ;
	LINKLIBS on citrun-gl = -lbsd -lstdc++ -lm -lglut ;
	LINKLIBS on citrun-inst = -lstdc++ -lbsd ;
}

if $(CITRUN_SA) {
	CC = $(CC) ;
	C++ = $(CXX) ;
}

if $(CITRUN_COVERAGE) {
	LIBEGCOV = /usr/local/lib/gcc/x86_64-unknown-openbsd6.0/4.9.3/libgcov.a ;
	LINKLIBS on citrun-gl += $(LIBEGCOV) ;
	LINKLIBS on citrun-inst += $(LIBEGCOV) ;
	LINKLIBS on citrun-term += $(LIBEGCOV) ;
	LinkLibraries libcitrun : /usr/lib/gcc-lib/amd64-unknown-openbsd6.0/4.2.1/libgcov.a ;
}

actions Test {
	prove ;
}

Test test : ;
Test regress : ;

rule Stringize
{
	MakeLocate $(1) : $(LOCATE_SOURCE) ;
	SEARCH on $(2) = $(SEARCH_SOURCE) ;
	Depends $(1) : $(2) ;
	Clean clean : $(1) ;
}

actions Stringize
{
	$(TOP)/src/stringize "static const char *$(1:B)" $(2) > $(1) ;
}

rule MkWrap
{
	MakeLocate $(1) : $(LOCATE_SOURCE) ;
	SEARCH on $(2) = $(SEARCH_SOURCE) ;
	Depends $(1) : $(2) ;
	Depends exe : $(1) ;
	Clean clean : $(1) ;
}

actions MkWrap
{
	sed -e s,%CITRUN_PATH%,$(CITRUN_PATH), < $(2) > $(1) ;
	chmod 755 $(1) ;
}

rule InstLink
{
	MakeLocate $(1) : $(LOCATE_SOURCE) ;
	SEARCH on $(2) = $(SEARCH_SOURCE) ;
	Depends files : $(<) ;
	Depends $(<) : $(>) ;
	Clean clean : $(<) ;
}

actions InstLink
{
	$(RM) $(<) && $(LN) -s citrun-inst $(<) ;
}

echo ...build citrun ($(OS))... ;
echo "   C++=		$(C++)" ;
echo "   CITRUN_LIB=	$(CITRUN_LIB)" ;
echo "   CITRUN_PATH=	$(CITRUN_PATH)" ;

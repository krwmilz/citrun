PREFIX ?= `pwd` ;

# Packaging systems like for build systems to respect this.
CFLAGS = $(CFLAGS) ;
C++FLAGS = $(CFLAGS) ;

C++FLAGS += -DCITRUN_LIB=$(PREFIX)/lib/libcitrun.a ;

if $(OS) = OPENBSD {
	C++ = eg++ ;

	C++FLAGS += -DCLANG_INCL="-I/usr/local/lib/clang/3.5/include" ;
	C++FLAGS += -DLLVM_VER=34 ;

	PKG_CONFIG_LIBS = gl glew freetype2 ;
	# Link directly against libestdc++ from ports
	LINKLIBS on citrun-gl = -lestdc++ -lm -lglut ;

	LINKLIBS on citrun-inst =
		-lestdc++
		-Wl,--start-group
		-lclangAST
		-lclangAnalysis
		-lclangBasic
		-lclangDriver
		-lclangEdit
		-lclangFrontend
		-lclangFrontendTool
		-lclangLex
		-lclangParse
		-lclangRewriteCore
		-lclangRewriteFrontend
		-lclangSema
		-lclangSerialization
		-lclangTooling
		-Wl,--end-group ;
}

if $(OS) = MACOSX {
	C++FLAGS += -DCLANG_INCL="-I/opt/local/libexec/llvm-3.7/lib/clang/3.7/include" ;
	C++FLAGS += -Wno-deprecated -DLLVM_VER=37 ;

	PKG_CONFIG_LIBS = glew freetype2 ;
	LINKLIBS on citrun-gl = -framework OpenGL -framework GLUT ;
	LINKLIBS on citrun-gl += -lc++ -lm ;

	# This is a dirty hack.
	RANLIB = ranlib -c ;

	LINKLIBS on citrun-inst =
		-lc++
		-lclangAST
		-lclangAnalysis
		-lclangBasic
		-lclangDriver
		-lclangEdit
		-lclangFrontend
		-lclangFrontendTool
		-lclangLex
		-lclangParse
		-lclangRewrite
		-lclangRewriteFrontend
		-lclangSema
		-lclangSerialization
		-lclangTooling ;
}

if $(OS) = LINUX {
	C++FLAGS = -DLLVM_VER=35 ;

	PKG_CONFIG_LIBS = gl glew freetype2 ;
	# Link directly against libestdc++ from ports
	LINKLIBS on citrun-gl = -lstdc++ -lm -lglut ;

	LINKLIBS on citrun-inst =
		-Wl,--start-group
		-lclangAST
		-lclangAnalysis
		-lclangBasic
		-lclangDriver
		-lclangEdit
		-lclangFrontend
		-lclangFrontendTool
		-lclangLex
		-lclangParse
		-lclangRewrite
		-lclangRewriteFrontend
		-lclangSema
		-lclangSerialization
		-lclangTooling
		-Wl,--end-group
		-lstdc++
		-lbsd ;
}

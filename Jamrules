#
# Knowing the absolute path to citrun resources is necessary for
# instrumentation. If PREFIX is set, assume we're building a package.
#
if $(PREFIX) {
	BUILD_MODE = "RELEASE" ;
	CITRUN_SHARE = $(PREFIX)/share/citrun ;
}
else {
	BUILD_MODE = "DEBUG" ;
	CITRUN_SHARE = "`readlink -f $(TOP)/src`" ;
}
echo ...build citrun ($(BUILD_MODE)) on $(OS)... ;

# Try and respect this, {pkg,llvm}-config gives -O? too unfortunately
OPTIM = $(CFLAGS) ;

C++FLAGS += -std=c++11 ;

CLANG_LIBS =
	-lclangAST
	-lclangAnalysis
	-lclangBasic
	-lclangDriver
	-lclangEdit
	-lclangFrontend
	-lclangFrontendTool
	-lclangLex
	-lclangParse
	-lclangRewrite
	-lclangRewriteFrontend
	-lclangSema
	-lclangSerialization
	-lclangTooling ;

if $(OS) = OPENBSD {
	C++ = eg++ ;

	PKG_CONFIG_LIBS = gl glew freetype2 ;
	LINKLIBS on citrun-gl = -lm -lglut ;
	LINKLIBS on citrun-inst += -Wl,--start-group $(CLANG_LIBS) -Wl,--end-group ;
}

if $(OS) = MACOSX {
	PKG_CONFIG_LIBS = glew freetype2 ;
	LINKLIBS on citrun-gl = -framework OpenGL -framework GLUT -lm ;
	LINKLIBS on citrun-inst = $(CLANG_LIBS) ;
}

if $(OS) = LINUX {
	# llvm version is 3.5 on Debian, which is too old.
	PKG_CONFIG_LIBS = gl glew freetype2 ;
	LINKLIBS on citrun-gl = -lbsd -lm -lglut ;
	LINKLIBS on citrun-inst = -lbsd ;
	LINKLIBS on citrun-inst += -Wl,--start-group $(CLANG_LIBS) -Wl,--end-group ;
}

if $(CITRUN_SA) {
	# scan-build sets these expecting us to pick up the new values.
	CC = $(CC) ;
	C++ = $(CXX) ;
}

if $(CITRUN_COVERAGE) {
	LINKLIBS on citrun-gl += -coverage ;
	LINKLIBS on citrun-inst += -coverage ;
	LINKLIBS on citrun-term += -coverage ;
	LINKLIBS on citrun-dump += -coverage ;
}

# Link with the c++ compiler so that the matching c++ runtime library gets added
# automatically.
LINK = $(C++) ;

actions Test {
	prove ;
}

Test test : ;
Test regress : ;

rule Stringize
{
	MakeLocate $(1) : $(LOCATE_SOURCE) ;
	SEARCH on $(2) = $(SEARCH_SOURCE) ;
	Depends $(1) : $(2) ;
	Clean clean : $(1) ;
}

actions Stringize
{
	$(TOP)/bin/stringize "static const char *$(1:B)" $(2) > $(1) ;
}

rule MkWrap
{
	MakeLocate $(1) : $(LOCATE_SOURCE) ;
	SEARCH on $(2) = $(SEARCH_SOURCE) ;
	Depends $(1) : $(2) ;
	Depends exe : $(1) ;
	Clean clean : $(1) ;
}

actions MkWrap
{
	sed -e s,%CITRUN_SHARE%,$(CITRUN_SHARE), < $(2) > $(1) ;
	chmod 755 $(1) ;
}

rule InstLink
{
	MakeLocate $(1) : $(LOCATE_SOURCE) ;
	SEARCH on $(2) = $(SEARCH_SOURCE) ;
	Depends files : $(<) ;
	Depends $(<) : $(>) ;
	Clean clean : $(<) ;
}

actions InstLink
{
	$(RM) $(<) && $(LN) -s citrun-inst $(<) ;
}

SubDir TOP ;

#
# Different build modifiers. Put them here because it only makes sense to run
# them from the root directory.
#
actions StaticAnalysis
{
	scan-build ./configure
	scan-build -o html --use-c++=eg++ jam -j4
}

actions TestCoverage
{
	set -e
	CFLAGS="-coverage" LDFLAGS="-coverage" ./configure
	jam -j4

	# Roll libgcov.a into libcitrun.a.
	ar -M < t/libcitrun_gcov.mri

	prove
	# prove tt

	gcov -o src src/lib.c
	egcov -r src/*.cc
}

StaticAnalysis static-analysis ;
TestCoverage test-coverage ;

#
# libcitrun
#
ObjectCcFlags lib.c : -fPIC -ansi ;
Library libcitrun : lib.c ;

#
# citrun_check
#
if ! $(NT) {
	Shell citrun_check : check.sh ;
}

actions ReplaceToken
{
	perl -p -i.bak -e "s/%CITRUN_COMPILERS%/$(CITRUN_COMPILERS)/" $(<)
}

#
# citrun_wrap
#
if $(NT) {
	File citrun_wrap.bat : wrap.bat ;
	Clean clean : citrun_wrap.bat ;
	ReplaceToken citrun_wrap.bat ;
}
else {
	Shell citrun_wrap : wrap.sh ;
	ReplaceToken citrun_wrap ;
}

#
# citrun_term
#
#LINKLIBS on citrun_term += -lcurses ;
#Main citrun_term : term_main.cc ;

#
# citrun_gl & citrun_gltest
#
GL_SRCS =
	gl_procfile.cc
	gl_transunit.cc
	process_dir.cc
	gl_view.cc
	demo-atlas.cc
	gl_buffer.cc
	gl_font.cc
	demo-glstate.cc
	demo-shader.cc
	matrix4x4.c ;

Library gl_common : $(GL_SRCS) ;

Stringize demo_atlas_glsl.h :   demo_atlas.glsl ;
Stringize demo_vshader_glsl.h : demo_vshader.glsl ;
Stringize demo_fshader_glsl.h : demo_fshader.glsl ;

ObjectDefines gl_font.cc : FONT_PATH=\\\"$(FONT_PATH)\\\" ;
ObjectC++Flags gl_main.cc gl_testmain.cc $(GL_SRCS) : $(GL_CFLAGS) ;

LINKLIBS on citrun_gl citrun_gltest += -lm $(GL_LIBS) ;
LinkLibraries citrun_gl citrun_gltest : gl_common libglyphy ;

Main citrun_gl : gl_main.cc ;

LINKLIBS on citrun_gltest += $(GLTEST_LIBS) ;
Main citrun_gltest : gl_testmain.cc ;

#
# citrun_inst
#
INST_SRCS =
	inst_main.cc
	inst_frontend.cc
	inst_action.cc
	inst_visitor.cc ;

Stringize lib_h.h : lib.h ;

ObjectC++Flags $(INST_SRCS) : $(INST_CFLAGS) ;
ObjectDefines $(INST_SRCS) : CITRUN_SHARE=\\\"$(CITRUN_SHARE)\\\" ;

LINKFLAGS on citrun_inst$(SUFEXE) = $(LINKFLAGS) $(INST_LDFLAGS) ;
LINKLIBS on citrun_inst$(SUFEXE) += $(INST_LIBS) ;

Main citrun_inst : $(INST_SRCS) ;

if $(NT) {
	for i in cl.exe link.exe {
		MakeLocate $(i) : compilers ;
		File $(i) : citrun_inst.exe ;
		Clean clean : $(i) ;
	}
}

# Link with the c++ compiler so that the matching c++ runtime library gets added
# automatically.
LINK on citrun_wrap citrun_inst citrun_gl citrun_gltest = $(C++) ;


# Create installation directories and setup quirky ../../citrun_inst links.
rule InstallSyms
{
	Depends install : $(PREFIX)/share/citrun/$(>) ;
	MakeLocate $(PREFIX)/share/citrun/$(>) : $(<) ;

	for i in $(>)
	{
		SymLink $(PREFIX)/share/citrun/$(i) ;
	}
}

# Used by InstallSyms
actions SymLink
{
	$(RM) $(<) && $(LN) -s ../../bin/citrun_inst $(<) ;
}

#
# install
#
InstallLib	$(PREFIX)/share/citrun	: libcitrun.a ;
InstallShell	$(PREFIX)/bin		: citrun_check ;
InstallBin	$(PREFIX)/bin		: citrun_wrap citrun_gl citrun_inst ;
InstallSyms	$(PREFIX)/share/citrun	: cc gcc clang clang++ g++ c++ egcc eg++ ;

SubInclude TOP glyphy ;
SubInclude TOP man ;

SubDir TOP src ;
#
# Knowing the absolute path to citrun resources is necessary because:
# - instrumented programs must be linked to the runtime library
# - the PATH compiler interception mechanism needs to remove itself from PATH
#
# If PREFIX is set we're building a package, so trust that will be the final
# (after installation) location.
#
if $(PREFIX) {
	CITRUN_SHARE = $(PREFIX)/share/citrun ;
}
else {
	CITRUN_SHARE = $(CITRUN_SRCDIR) ;
}

# Do a string replacement on the first argument.
actions ReplaceTokens
{
	sed -e s,%CITRUN_SHARE%,$(CITRUN_SHARE), -i.bak $(<) ;
	rm $(<).bak
}

#
# libcitrun.a
#
ObjectCcFlags lib.c : -fPIC -ansi ;
Library libcitrun : lib.c ;

#
# citrun-wrap, citrun-check
#
MakeLocate citrun-check citrun-wrap : $(LOCATE_SOURCE) ;
Shell citrun-check : check.sh ;
Shell citrun-wrap : wrap.sh ;

ReplaceTokens citrun-wrap ;

#
# citrun-term
#
#LINKLIBS on citrun-term += -lcurses ;
# XXX: Not the main focus right now.
# Main citrun-term : term_main.cc ;

#
# citrun-gl & citrun-gltest
#
GL_SRCS =
	gl_procfile.cc
	gl_transunit.cc
	process_dir.cc
	gl_view.cc
	demo-atlas.cc
	gl_buffer.cc
	gl_font.cc
	demo-glstate.cc
	demo-shader.cc
	matrix4x4.c ;

Library gl_common : $(GL_SRCS) ;

Stringize demo_atlas_glsl.h :   demo_atlas.glsl ;
Stringize demo_vshader_glsl.h : demo_vshader.glsl ;
Stringize demo_fshader_glsl.h : demo_fshader.glsl ;

ObjectDefines gl_font.cc : FONT_PATH=\\\"$(FONT_PATH)\\\" ;
ObjectC++Flags gl_main.cc gl_testmain.cc $(GL_SRCS) : $(GL_CFLAGS) ;

LINKLIBS on citrun-gl citrun-gltest += -lm $(GL_LIBS) ;
LinkLibraries citrun-gl citrun-gltest : gl_common libglyphy ;

LINKLIBS on citrun-gltest += $(GLTEST_LIBS) ;

Main citrun-gl : gl_main.cc ;
Main citrun-gltest : gl_testmain.cc ;

#
# citrun-inst
#
INST_SRCS =
	inst_main.cc
	inst_frontend.cc
	inst_action.cc
	inst_visitor.cc ;

CLANG_LIBS =
	-lclangAST
	-lclangAnalysis
	-lclangBasic
	-lclangDriver
	-lclangEdit
	-lclangFrontend
	-lclangFrontendTool
	-lclangLex
	-lclangParse
	-lclangRewrite
	-lclangRewriteFrontend
	-lclangSema
	-lclangSerialization
	-lclangTooling ;

Stringize lib_h.h : lib.h ;

ObjectC++Flags $(INST_SRCS) : $(INST_CFLAGS) ;
ObjectDefines $(INST_SRCS) : CITRUN_SHARE=\\\"$(CITRUN_SHARE)\\\" ;

LINKFLAGS on citrun-inst = $(LINKFLAGS) $(INST_LDFLAGS) ;
LINKLIBS on citrun-inst += $(LDGROUP_START) $(CLANG_LIBS) $(LDGROUP_END) $(INST_LIBS) ;

Main citrun-inst : $(INST_SRCS) ;

# Link with the c++ compiler so that the matching c++ runtime library gets added
# automatically.
LINK on citrun-inst citrun-term citrun-gl citrun-gltest = $(C++) ;

#
# install
#
InstallLib	$(PREFIX)/share/citrun	: libcitrun.a ;
InstallShell	$(PREFIX)/bin		: citrun-wrap citrun-check ;
InstallBin	$(PREFIX)/bin		: citrun-gl citrun-inst ;
InstallSyms	$(PREFIX)/share/citrun	: cc gcc clang clang++ g++ c++ egcc eg++ ;

SubInclude TOP src glyphy ;

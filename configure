#!/bin/sh -eu
#
# ░█▀▀░░░▀█▀░▀█▀░░░█▀▄░█░█░█▀█
# ░█░░░░░░█░░░█░░░░█▀▄░█░█░█░█
# ░▀▀▀░░░▀▀▀░░▀░░░░▀░▀░▀▀▀░▀░▀
#
# Creates Jamrules file.
#
type pkg-config
type llvm-config

#
# Check for C++11 compiler.
#
touch __test.cc
${CXX-c++} -std=c++11 -c __test.cc

#
# llvm/clang versions must be >= 3.7
#
llvm-config --version

#
# Check for pkg-config available software. Try and print a nice missing list.
#
gl_pkgs="osmesa glfw3 glew freetype2"

should_exit=0
for pkg in $gl_pkgs; do
	if ! pkg-config --exists $pkg; then
		echo "$pkg not found"
		should_exit=1
	fi
done
test $should_exit -eq 0 || exit 1

#
# Write Jamrules which consists of {llvm,pkg}-config calls getting various flags
# and library names. Note any errors inside backticks will be ignored.
#
cat <<EOF > Jamrules
CC = ${CC-cc} ;
C++ = ${CXX-c++} ;

CCFLAGS += "${CFLAGS-}" ;
C++FLAGS += -std=c++11 -fno-exceptions -fno-rtti ${CFLAGS-} ;
LINKFLAGS += "${LDFLAGS-}" ;

CITRUN_SRCDIR = "`pwd`/src" ;

GL_CFLAGS = "`pkg-config --cflags glfw3 glew freetype2`" ;
GL_LIBS = "`pkg-config --libs glfw3 glew freetype2`" ;
GLTEST_LIBS  = "`pkg-config --libs osmesa`" ;

INST_CFLAGS = "`llvm-config --cxxflags`" ;
INST_LDFLAGS = "`llvm-config --ldflags`" ;
INST_LIBS = "`llvm-config --libs bitreader mcparser transformutils option`" ;
INST_LIBS += "`llvm-config --system-libs`" ;

# Generated by './configure' on `date`
echo ...build C It Run on \$(OS)... ;

if \$(OS) = OPENBSD {
	LDGROUP_START = -Wl,--start-group ;
	LDGROUP_END = -Wl,--end-group ;
	FONT_PATH = "/usr/X11R6/lib/X11/fonts/TTF/DejaVuSansMono.ttf" ;
}
else if \$(OS) = MACOSX {
	LINKLIBS on citrun-gl = -framework OpenGL ;
	FONT_PATH "/Library/Fonts/Andale Mono.ttf" ;
}
else if \$(OS) = LINUX {
	LINKLIBS on citrun-gl citrun-inst = -lbsd ;
	LDGROUP_START = -Wl,--start-group ;
	LDGROUP_END = -Wl,--end-group ;
	FONT_PATH = "/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf" ;
}
else {
	echo "WARNING: FONT_PATH not configured" ;
}

EOF

cat Jamrules.tail >> Jamrules

echo
echo === Configuration Summary ==============================================
head -n 8 Jamrules
echo ========================================================================
echo
echo "...call \`jam\` to build..."

#!/bin/sh -eu
#
# Checks that a bunch of crap is installed, creates Jamrules file.
#
echo ░█▀▀░░░▀█▀░▀█▀░░░█▀▄░█░█░█▀█
echo ░█░░░░░░█░░░█░░░░█▀▄░█░█░█░█
echo ░▀▀▀░░░▀▀▀░░▀░░░░▀░▀░▀▀▀░▀░▀
echo Configuring...
echo

# These binaries are assumed throughout so make sure they are available.
type pkg-config jam
echo

# Operating system specific variables.
uname=`uname`
if [ $uname = OpenBSD ]; then
	LDGROUP_START="-Wl,--start-group"
	LDGROUP_END="-Wl,--end-group"
	FONT_PATH="/usr/X11R6/lib/X11/fonts/TTF/DejaVuSansMono.ttf"
	CXX=${CXX-eg++}
	LLVM_INCLUDES='-I/usr/local/include'
	#LLVM_INCLUDES='-I/usr/src/gnu/llvm/tools/clang/include
	#-I/usr/src/gnu/llvm/include
	#-I/usr/src/gnu/usr.bin/clang/include
	#-I/usr/obj/gnu/usr.bin/clang/include'
elif [ $uname = Darwin ]; then
	GL_EXTRALIB="-framework OpenGL"
	FONT_PATH="/Library/Fonts/Andale Mono.ttf"
elif [ $uname = Linux ]; then
	GL_EXTRALIB="-lbsd"
	INST_EXTRALIB="-lbsd"
	LDGROUP_START="-Wl,--start-group"
	LDGROUP_END="-Wl,--end-group"
	FONT_PATH="/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf"
else
	echo WARNING: Platform $uname not tested. Compilation may fail.
	echo
fi

# C++11 required.
${CXX-c++} -x c++ -std=c++11 -E - < /dev/null > /dev/null

# citrun_gltest needs osmesa and both it and citrun_gl need the rest.
gl_pkgs="osmesa glfw3 glew freetype2"
for pkg in $gl_pkgs; do
	printf "%10s = " $pkg
	pkg-config --modversion $pkg || (echo "not found" && exit 1)
done
echo

# citrun_inst needs lots of Clang and LLVM libraries.
# for LLVM libraries:
#	llvm-config --libs bitreader mcparser transformutils option
INST_LIBS="-lcurses
	-lpthread
	-lz
	-lm
	${LDGROUP_START-}
	-lclangAST
	-lclangAnalysis
	-lclangBasic
	-lclangDriver
	-lclangEdit
	-lclangFrontend
	-lclangFrontendTool
	-lclangLex
	-lclangParse
	-lclangRewrite
	-lclangRewriteFrontend
	-lclangSema
	-lclangSerialization
	-lclangTooling
	${LDGROUP_END-}
	-lLLVMOption
	-lLLVMTransformUtils
	-lLLVMAnalysis
	-lLLVMProfileData
	-lLLVMMCParser
	-lLLVMMC
	-lLLVMBitReader
	-lLLVMCore
	-lLLVMSupport"

PREFIX=${PREFIX-`pwd`}
if [ ${PREFIX} == `pwd`  ]; then
	SHAREDIR=compilers
	LIBDIR=
else
	SHAREDIR=share/citrun
	LIBDIR=lib
fi

# Write prefix.h
cat <<EOF > prefix.h
static const char *share_dir = R"(${PREFIX}/${SHAREDIR})";
static const char *lib_dir = R"(${PREFIX}/${LIBDIR})";
EOF

# Write citrun_wrap
cat <<EOF > citrun_wrap
#!/bin/sh

export PATH="${PREFIX}/${SHAREDIR}:\$PATH"
exec \$@
EOF
chmod +x citrun_wrap

# Write Jamrules. Any errors inside backticks get ignored.
cat <<EOF > Jamrules
CC = ${CC-cc} ;
C++ = ${CXX-c++} ;

CCFLAGS  += ${CFLAGS-} -Wall -W -Wcast-qual
	-Wwrite-strings ;
C++FLAGS += ${CFLAGS-} -Wall -W -Wcast-qual
	-std=c++11
	-fno-exceptions
	-fno-rtti
	-Wno-unused-parameter
	-Werror=date-time
	-fvisibility-inlines-hidden
	-Wdelete-non-virtual-dtor ;
LINKFLAGS += ${LDFLAGS-} ;

FONT_PATH = "${FONT_PATH}" ;

GL_CFLAGS = `pkg-config --cflags glfw3 glew freetype2` ;
GL_LIBS = ${GL_EXTRALIB-} `pkg-config --libs glfw3 glew freetype2` ;
GLTEST_LIBS  = `pkg-config --libs osmesa` ;

INST_CFLAGS = ${LLVM_INCLUDES-}
	-Wno-comment
	-D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS ;
INST_LDFLAGS = -nopie ;
INST_LIBS = ${INST_EXTRALIB-} ${INST_LIBS} ;
EOF

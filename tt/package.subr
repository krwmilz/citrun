[ `uname` != "OpenBSD" ] && return 0

set -u
. tt/libtap.subr

# Script arguments give the path in the OpenBSD ports system.
portdir="/usr/ports/$1/$2"
workdist=`make -C $portdir show=WRKDIST`
workdir=`make -C $portdir show=WRKDIR`
workdir_inst="${workdir}-citrun"

# This is used by the OpenBSD /usr/ports/infratstucture/.
portpath="${PWD}/compilers:$workdir_inst/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11R6/bin"

export CITRUN_PROCDIR="$workdir/procdir/"

pkg_extract()
{
	make -C $portdir extract > /dev/null
	ok 'is make extract exit code 0' test $? -eq 0

	diag "Building vanilla port in '$workdir'"
}

pkg_extract_instrumented()
{
	make -C $portdir WRKDIR="$workdir_inst" extract > /dev/null
	ok 'is make extract (citrun) exit code 0' test $? -eq 0

	diag "Building instrumented port in '$workdir_inst'"
}

pkg_check_deps()
{
	make -C $portdir full-all-depends > $workdir/deps
	make -C $portdir full-test-depends >> $workdir/deps
	sort $workdir/deps | uniq > $workdir/deps.uniq

	pkg_info -q > $workdir/installed
	comm -2 -3 $workdir/deps.uniq $workdir/installed > $workdir/deps_needed

	diff -u /dev/null $workdir/deps_needed || bail "dependencies not met"
	diag "Port has `wc -l < $workdir/deps.uniq` dependencies, all are met"
}

pkg_build()
{
	start=`date +%s`

	make -C $portdir build > $workdir/build.stdout 2> $workdir/build.stderr
	ok 'is make build exit code 0' test $? -eq 0

	diag "Vanilla build took $((`date +%s` - start)) sec"
}

pkg_build_instrumented()
{
	start=`date +%s`

	make -C $portdir PORTPATH="$portpath" WRKDIR="$workdir_inst" build \
		> $workdir_inst/build.stdout \
		2> $workdir_inst/build.stderr
	ok 'is instrumented make build exit code 0' test $? -eq 0

	diag "Instrumented build took $((`date +%s` - start)) sec"
}

pkg_test()
{
	start=`date +%s`

	make -C $portdir test > $workdir/test.stdout 2> $workdir/test.stderr
	ok 'is make test exit code 0' test $? -eq 0

	diag "Vanilla test took $((`date +%s` - start)) sec"
}

pkg_test_instrumented()
{
	ok 'is test with instrumentation successful' \
		make -C $portdir PORTPATH="${portpath}" test
}

pkg_citrun_check()
{
	citrun_check $workdir_inst > $workdir_inst/check.out
	ok 'is citrun_check successful' test $? -eq 0

	ok 'is Milliseconds sanitized' \
		sed -i.bak -e "/Milliseconds spent/d" $workdir_inst/check.out
	ok 'is citrun_check output identical' \
		diff -u $workdir_inst/check.good $workdir_inst/check.out
}

pkg_clean()
{
	make -C $portdir clean=all > /dev/null
	ok 'is make clean exit code 0' test $? -eq 0
	ok 'is rm -rf instrumented workdir exit code 0' rm -rf $workdir_inst
}

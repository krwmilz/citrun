echo ░█▀▀░░░▀█▀░▀█▀░░░█▀▄░█░█░█▀█ ;
echo ░█░░░░░░█░░░█░░░░█▀▄░█░█░█░█ ;
echo ░▀▀▀░░░▀▀▀░░▀░░░░▀░▀░▀▀▀░▀░▀ ;

# Quote an entire file and add a variable declaration prefixing the string.
rule Stringize
{
	MakeLocate $(1) : $(LOCATE_SOURCE) ;
	SEARCH on $(2) = $(SEARCH_SOURCE) ;
	Depends $(1) : $(2) ;
	Clean clean : $(1) ;
}

if $(NT) {
	actions Stringize
	{
		> $(<) echo static const char *$(1:B) = R"(
		>> $(<) type $(>)
		>> $(<) echo )";
	}
} else {
	actions Stringize
	{
		> $(<) echo "static const char *$(1:B) = R\"("
		>> $(<) cat $(>)
		>> $(<) echo ")\";"
	}
}

#
# Different build modifiers for static analysis and test coverage.
#
actions StaticAnalysis
{
	scan-build ./configure
	scan-build -o html --use-c++=eg++ jam -j4
}

actions TestCoverage
{
	set -e
	CFLAGS="-coverage" LDFLAGS="-coverage" ./configure
	jam -j4

	# Roll libgcov.a into libcitrun.a.
	ar -M < t/libcitrun_gcov.mri

	prove
	# prove tt

	gcov -o src src/lib.c
	egcov -r src/*.cc
}

StaticAnalysis static-analysis ;
TestCoverage test-coverage ;

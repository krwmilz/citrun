.Dd April 10, 2016
.Dt CITRUN-WRAP 1
.Os
.Sh NAME
.Nm citrun-wrap
.Nd add instrumentation to a native build command
.Sh SYNOPSIS
.Nm
.Ar make | jam | gcc | cmake | ...
.Sh DESCRIPTION
Modifies source code in place, adding instrumentation to native source code.
Warning, read that last sentence again.
Add instrumentation to an existing native build command by configuring the
environment and then calling the command.
.Pp
If the native build system calls any of the following compilers, any output
object files should be instrumented:
.Pp
.Bl -tag -width Ds -offset indent -compact
.It c++
.It cc
.It clang
.It clang++
.It eg++
.It egcc
.It g++
.It gcc
.El
.Pp
.Nm
exports the
.Ev CITRUN_PATH
and
.Ev PATH
environment variables before calling the native build command.
.Pp
.Bl -tag -width Ds
.It Ev CITRUN_PATH
Points to a directory containing compiler named symlinks that all point to
.Xr citrun-inst 1 .
.It Ev PATH
Is prepended with
.Ev CITRUN_PATH
so that binaries in that directory have the highest precedence.
.El
.Sh EXAMPLES
The following Makefile builds a simple target application named
.Qq program .
.Bd -literal -offset indent
PROG = program
SRCS = main.c

\&.include <bsd.prog.mk>
.Ed
.Pp
To see
.Qq program
run, prepend
.Nm
to the native build command. In this case that build command is
.Qq make :
.Pp
.Dl $ citrun-wrap make
.Sh SEE ALSO
.Xr citrun-gl 1 ,
.Xr citrun-inst 1
